/**
 *  Copyright 2015 SmartThings
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 *  Revision History
 *  2024-09-21    Dan Ogorchock    Updated for use on Hubitat Elevation
 *
 */
metadata {
	definition (name: "Lutron Shield", namespace: "bravenel", author: "Bruce Ravenel") {
        capability "Actuator"
        
        attribute "msgRcvd", "String"
        
        command "hello"
        command "sendMsg", ["string"]
	}

/*  Commented out by Dan Ogorchock as not used on Hubitat Elevation
	// Simulator metadata
	simulator {
	}

	// UI tile definitions
	tiles {
		standardTile("greeting", "device.greeting", width: 2, height: 2, canChangeIcon: true, canChangeBackground: true) {
			state "default", label: 'hello', action: "hello", icon: "st.switches.switch.off", backgroundColor: "#ccccff"
		}     

		main "greeting"
		details (["greeting"])
	}
*/
}

// Parse incoming device messages to generate events
def parse(String description) {
	def value = zigbee.parse(description)?.text
	if(value == 0 || value == "ping") return
	def result = createEvent(name: "msgRcvd", value: value, isStateChange: true)
	log.debug "Parse returned ${result?.descriptionText}"
	return result
}

// Commands sent to the device
def sendMsg(String s) {
	//zigbee.smartShield(text: s).format()  //Modified by Dan Ogorchock for use on Hubitat Elevation
    sendThingShield(s)
}

//Added by Dan Ogorchock for use on Hubitat Elevation
def sendThingShield(String message) {
    def encodedString = DataType.pack(message, DataType.STRING_CHAR).substring(2)
	return "he raw 0x${device.deviceNetworkId} 1 0x${device.endpointId} 0x0 {00000a0a" + encodedString + "}"
}

def hello() {
	log.debug "Hello World!"
	//zigbee.smartShield(text: "hello").format()  //Modified by Dan Ogorchock for use on Hubitat Elevation
    sendThingShield("hello")
}
